// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EdgeOrder.Models
{
    public partial class ProductDetails : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(DisplayInfo))
            {
                writer.WritePropertyName("displayInfo");
                writer.WriteObjectValue(DisplayInfo);
            }
            writer.WritePropertyName("hierarchyInformation");
            writer.WriteObjectValue(HierarchyInformation);
            if (Optional.IsCollectionDefined(OptInAdditionalConfigurations))
            {
                writer.WritePropertyName("optInAdditionalConfigurations");
                writer.WriteStartArray();
                foreach (var item in OptInAdditionalConfigurations)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static ProductDetails DeserializeProductDetails(JsonElement element)
        {
            Optional<DisplayInfo> displayInfo = default;
            HierarchyInformation hierarchyInformation = default;
            Optional<DoubleEncryptionStatus> productDoubleEncryptionStatus = default;
            Optional<IdentificationType> identificationType = default;
            Optional<DeviceDetails> parentDeviceDetails = default;
            Optional<IList<AdditionalConfiguration>> optInAdditionalConfigurations = default;
            Optional<IReadOnlyList<ConfigurationDeviceDetails>> childConfigurationDeviceDetails = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("displayInfo"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    displayInfo = DisplayInfo.DeserializeDisplayInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("hierarchyInformation"))
                {
                    hierarchyInformation = HierarchyInformation.DeserializeHierarchyInformation(property.Value);
                    continue;
                }
                if (property.NameEquals("productDoubleEncryptionStatus"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    productDoubleEncryptionStatus = new DoubleEncryptionStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("identificationType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    identificationType = new IdentificationType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("parentDeviceDetails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    parentDeviceDetails = DeviceDetails.DeserializeDeviceDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("optInAdditionalConfigurations"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AdditionalConfiguration> array = new List<AdditionalConfiguration>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AdditionalConfiguration.DeserializeAdditionalConfiguration(item));
                    }
                    optInAdditionalConfigurations = array;
                    continue;
                }
                if (property.NameEquals("childConfigurationDeviceDetails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ConfigurationDeviceDetails> array = new List<ConfigurationDeviceDetails>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ConfigurationDeviceDetails.DeserializeConfigurationDeviceDetails(item));
                    }
                    childConfigurationDeviceDetails = array;
                    continue;
                }
            }
            return new ProductDetails(displayInfo.Value, hierarchyInformation, Optional.ToNullable(productDoubleEncryptionStatus), Optional.ToNullable(identificationType), parentDeviceDetails.Value, Optional.ToList(optInAdditionalConfigurations), Optional.ToList(childConfigurationDeviceDetails));
        }
    }
}
